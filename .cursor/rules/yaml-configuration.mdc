---
globs: *.yaml,*.yml
description: Gerenciamento da configura√ß√£o YAML do projeto
---

# üìã Configura√ß√£o YAML - links.yaml

O arquivo [links.yaml](mdc:links.yaml) cont√©m a configura√ß√£o das categorias de prompts do godofprompt.ai.

## üìä Estrutura do Arquivo

```yaml
categoriasDePrompt:
  - nome: "Vendas"
    quantidadeDePrompts: 252
    link: "https://www.godofprompt.ai/prompts?category=sales&premium=true"
  - nome: "Educa√ß√£o"
    quantidadeDePrompts: 276
    link: "https://www.godofprompt.ai/prompts?category=education&premium=true"
```

## üè∑Ô∏è Campos Obrigat√≥rios

### `nome` (string)
- Nome descritivo da categoria
- Usado para identifica√ß√£o e logging
- Deve ser √∫nico no arquivo

### `quantidadeDePrompts` (inteiro)
- N√∫mero esperado de prompts nesta categoria
- Usado para calcular taxa de sucesso
- Pode n√£o corresponder exatamente ao real (site pode ter mais/menos)

### `link` (string)
- URL base da categoria no godofprompt.ai
- Deve incluir par√¢metros `category` e `premium=true`
- Formato: `https://www.godofprompt.ai/prompts?category={slug}&premium=true`

## üîß Como Modificar

### Adicionando Nova Categoria
```yaml
  - nome: "Nova Categoria"
    quantidadeDePrompts: 150
    link: "https://www.godofprompt.ai/prompts?category=nova-categoria&premium=true"
```

### Atualizando Quantidades
```yaml
  - nome: "Vendas"
    quantidadeDePrompts: 280  # Atualizado
    link: "https://www.godofprompt.ai/prompts?category=sales&premium=true"
```

## üìñ Leitura no C√≥digo Python

```python
import yaml

def load_categories():
    """Carrega as categorias do arquivo links.yaml"""
    with open('links.yaml', 'r', encoding='utf-8') as f:
        data = yaml.safe_load(f)
    return data['categoriasDePrompt']

# Uso
categories = load_categories()
for cat in categories:
    print(f"{cat['nome']}: {cat['quantidadeDePrompts']} prompts")
```

## ‚ö†Ô∏è Valida√ß√µes Importantes

### Verificar URLs
- Todas as URLs devem ser v√°lidas
- Devem seguir o padr√£o do godofprompt.ai
- Par√¢metro `premium=true` √© obrigat√≥rio

### Nomes √önicos
```python
def validate_unique_names(categories):
    names = [cat['nome'] for cat in categories]
    return len(names) == len(set(names))
```

### URLs V√°lidas
```python
from urllib.parse import urlparse

def validate_urls(categories):
    for cat in categories:
        parsed = urlparse(cat['link'])
        if not (parsed.scheme and parsed.netloc):
            raise ValueError(f"URL inv√°lida: {cat['link']}")
```

## üîÑ Sincroniza√ß√£o com Site

### Verificar Atualiza√ß√µes
1. Acesse cada categoria no site
2. Conte o n√∫mero real de prompts
3. Atualize o campo `quantidadeDePrompts`
4. Execute o scraper para validar

### Detectar Novas Categorias
1. Explore o site godofprompt.ai
2. Identifique novas categorias
3. Adicione entradas no YAML
4. Teste a extra√ß√£o

## üìà Monitoramento

### Taxa de Sucesso
```python
def calculate_success_rate(extracted, expected):
    return (len(extracted) / expected) * 100 if expected > 0 else 0
```

### Relat√≥rio de Discrep√¢ncias
```python
def report_discrepancies(results):
    for cat_name, data in results.items():
        extracted = len(data['prompts'])
        expected = data['quantidade_esperada']
        diff = extracted - expected

        if abs(diff) > 10:  # Diferen√ßa significativa
            print(f"‚ö†Ô∏è  {cat_name}: esperado {expected}, extra√≠do {extracted} ({diff:+d})")
```